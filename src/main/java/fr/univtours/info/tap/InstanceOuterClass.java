package fr.univtours.info.tap;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instance.proto

public final class InstanceOuterClass {
  private InstanceOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InstanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Instance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 size = 1;</code>
     * @return The size.
     */
    int getSize();

    /**
     * <code>double epTime = 2;</code>
     * @return The epTime.
     */
    double getEpTime();

    /**
     * <code>double epDist = 3;</code>
     * @return The epDist.
     */
    double getEpDist();

    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @return A list containing the interests.
     */
    java.util.List<java.lang.Double> getInterestsList();
    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @return The count of interests.
     */
    int getInterestsCount();
    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The interests at the given index.
     */
    double getInterests(int index);

    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @return A list containing the costs.
     */
    java.util.List<java.lang.Double> getCostsList();
    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @return The count of costs.
     */
    int getCostsCount();
    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The costs at the given index.
     */
    double getCosts(int index);

    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @return A list containing the distances.
     */
    java.util.List<java.lang.Double> getDistancesList();
    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @return The count of distances.
     */
    int getDistancesCount();
    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The distances at the given index.
     */
    double getDistances(int index);
  }
  /**
   * Protobuf type {@code Instance}
   */
  public static final class Instance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Instance)
      InstanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Instance.newBuilder() to construct.
    private Instance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Instance() {
      interests_ = emptyDoubleList();
      costs_ = emptyDoubleList();
      distances_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Instance();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Instance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              size_ = input.readUInt32();
              break;
            }
            case 17: {

              epTime_ = input.readDouble();
              break;
            }
            case 25: {

              epDist_ = input.readDouble();
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                interests_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              interests_.addDouble(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                interests_ = newDoubleList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                interests_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 41: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                costs_ = newDoubleList();
                mutable_bitField0_ |= 0x00000002;
              }
              costs_.addDouble(input.readDouble());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                costs_ = newDoubleList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                costs_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 49: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                distances_ = newDoubleList();
                mutable_bitField0_ |= 0x00000004;
              }
              distances_.addDouble(input.readDouble());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                distances_ = newDoubleList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                distances_.addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          interests_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          costs_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          distances_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return InstanceOuterClass.internal_static_Instance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return InstanceOuterClass.internal_static_Instance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InstanceOuterClass.Instance.class, InstanceOuterClass.Instance.Builder.class);
    }

    public static final int SIZE_FIELD_NUMBER = 1;
    private int size_;
    /**
     * <code>uint32 size = 1;</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }

    public static final int EPTIME_FIELD_NUMBER = 2;
    private double epTime_;
    /**
     * <code>double epTime = 2;</code>
     * @return The epTime.
     */
    @java.lang.Override
    public double getEpTime() {
      return epTime_;
    }

    public static final int EPDIST_FIELD_NUMBER = 3;
    private double epDist_;
    /**
     * <code>double epDist = 3;</code>
     * @return The epDist.
     */
    @java.lang.Override
    public double getEpDist() {
      return epDist_;
    }

    public static final int INTERESTS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.DoubleList interests_;
    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @return A list containing the interests.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getInterestsList() {
      return interests_;
    }
    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @return The count of interests.
     */
    public int getInterestsCount() {
      return interests_.size();
    }
    /**
     * <code>repeated double interests = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The interests at the given index.
     */
    public double getInterests(int index) {
      return interests_.getDouble(index);
    }
    private int interestsMemoizedSerializedSize = -1;

    public static final int COSTS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.DoubleList costs_;
    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @return A list containing the costs.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getCostsList() {
      return costs_;
    }
    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @return The count of costs.
     */
    public int getCostsCount() {
      return costs_.size();
    }
    /**
     * <code>repeated double costs = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The costs at the given index.
     */
    public double getCosts(int index) {
      return costs_.getDouble(index);
    }
    private int costsMemoizedSerializedSize = -1;

    public static final int DISTANCES_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.DoubleList distances_;
    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @return A list containing the distances.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getDistancesList() {
      return distances_;
    }
    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @return The count of distances.
     */
    public int getDistancesCount() {
      return distances_.size();
    }
    /**
     * <pre>
     *compress matrix to single dimension array
     * </pre>
     *
     * <code>repeated double distances = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The distances at the given index.
     */
    public double getDistances(int index) {
      return distances_.getDouble(index);
    }
    private int distancesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (size_ != 0) {
        output.writeUInt32(1, size_);
      }
      if (epTime_ != 0D) {
        output.writeDouble(2, epTime_);
      }
      if (epDist_ != 0D) {
        output.writeDouble(3, epDist_);
      }
      if (getInterestsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(interestsMemoizedSerializedSize);
      }
      for (int i = 0; i < interests_.size(); i++) {
        output.writeDoubleNoTag(interests_.getDouble(i));
      }
      if (getCostsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(costsMemoizedSerializedSize);
      }
      for (int i = 0; i < costs_.size(); i++) {
        output.writeDoubleNoTag(costs_.getDouble(i));
      }
      if (getDistancesList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(distancesMemoizedSerializedSize);
      }
      for (int i = 0; i < distances_.size(); i++) {
        output.writeDoubleNoTag(distances_.getDouble(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (size_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, size_);
      }
      if (epTime_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, epTime_);
      }
      if (epDist_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, epDist_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getInterestsList().size();
        size += dataSize;
        if (!getInterestsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        interestsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getCostsList().size();
        size += dataSize;
        if (!getCostsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        costsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDistancesList().size();
        size += dataSize;
        if (!getDistancesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        distancesMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof InstanceOuterClass.Instance)) {
        return super.equals(obj);
      }
      InstanceOuterClass.Instance other = (InstanceOuterClass.Instance) obj;

      if (getSize()
          != other.getSize()) return false;
      if (java.lang.Double.doubleToLongBits(getEpTime())
          != java.lang.Double.doubleToLongBits(
              other.getEpTime())) return false;
      if (java.lang.Double.doubleToLongBits(getEpDist())
          != java.lang.Double.doubleToLongBits(
              other.getEpDist())) return false;
      if (!getInterestsList()
          .equals(other.getInterestsList())) return false;
      if (!getCostsList()
          .equals(other.getCostsList())) return false;
      if (!getDistancesList()
          .equals(other.getDistancesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
      hash = (37 * hash) + EPTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getEpTime()));
      hash = (37 * hash) + EPDIST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getEpDist()));
      if (getInterestsCount() > 0) {
        hash = (37 * hash) + INTERESTS_FIELD_NUMBER;
        hash = (53 * hash) + getInterestsList().hashCode();
      }
      if (getCostsCount() > 0) {
        hash = (37 * hash) + COSTS_FIELD_NUMBER;
        hash = (53 * hash) + getCostsList().hashCode();
      }
      if (getDistancesCount() > 0) {
        hash = (37 * hash) + DISTANCES_FIELD_NUMBER;
        hash = (53 * hash) + getDistancesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static InstanceOuterClass.Instance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InstanceOuterClass.Instance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InstanceOuterClass.Instance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InstanceOuterClass.Instance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InstanceOuterClass.Instance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InstanceOuterClass.Instance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InstanceOuterClass.Instance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static InstanceOuterClass.Instance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static InstanceOuterClass.Instance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static InstanceOuterClass.Instance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static InstanceOuterClass.Instance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static InstanceOuterClass.Instance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(InstanceOuterClass.Instance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Instance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Instance)
        InstanceOuterClass.InstanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return InstanceOuterClass.internal_static_Instance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return InstanceOuterClass.internal_static_Instance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                InstanceOuterClass.Instance.class, InstanceOuterClass.Instance.Builder.class);
      }

      // Construct using InstanceOuterClass.Instance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        size_ = 0;

        epTime_ = 0D;

        epDist_ = 0D;

        interests_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        costs_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        distances_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return InstanceOuterClass.internal_static_Instance_descriptor;
      }

      @java.lang.Override
      public InstanceOuterClass.Instance getDefaultInstanceForType() {
        return InstanceOuterClass.Instance.getDefaultInstance();
      }

      @java.lang.Override
      public InstanceOuterClass.Instance build() {
        InstanceOuterClass.Instance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public InstanceOuterClass.Instance buildPartial() {
        InstanceOuterClass.Instance result = new InstanceOuterClass.Instance(this);
        int from_bitField0_ = bitField0_;
        result.size_ = size_;
        result.epTime_ = epTime_;
        result.epDist_ = epDist_;
        if (((bitField0_ & 0x00000001) != 0)) {
          interests_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.interests_ = interests_;
        if (((bitField0_ & 0x00000002) != 0)) {
          costs_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.costs_ = costs_;
        if (((bitField0_ & 0x00000004) != 0)) {
          distances_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.distances_ = distances_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof InstanceOuterClass.Instance) {
          return mergeFrom((InstanceOuterClass.Instance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(InstanceOuterClass.Instance other) {
        if (other == InstanceOuterClass.Instance.getDefaultInstance()) return this;
        if (other.getSize() != 0) {
          setSize(other.getSize());
        }
        if (other.getEpTime() != 0D) {
          setEpTime(other.getEpTime());
        }
        if (other.getEpDist() != 0D) {
          setEpDist(other.getEpDist());
        }
        if (!other.interests_.isEmpty()) {
          if (interests_.isEmpty()) {
            interests_ = other.interests_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInterestsIsMutable();
            interests_.addAll(other.interests_);
          }
          onChanged();
        }
        if (!other.costs_.isEmpty()) {
          if (costs_.isEmpty()) {
            costs_ = other.costs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCostsIsMutable();
            costs_.addAll(other.costs_);
          }
          onChanged();
        }
        if (!other.distances_.isEmpty()) {
          if (distances_.isEmpty()) {
            distances_ = other.distances_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDistancesIsMutable();
            distances_.addAll(other.distances_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        InstanceOuterClass.Instance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (InstanceOuterClass.Instance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int size_ ;
      /**
       * <code>uint32 size = 1;</code>
       * @return The size.
       */
      @java.lang.Override
      public int getSize() {
        return size_;
      }
      /**
       * <code>uint32 size = 1;</code>
       * @param value The size to set.
       * @return This builder for chaining.
       */
      public Builder setSize(int value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 size = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSize() {
        
        size_ = 0;
        onChanged();
        return this;
      }

      private double epTime_ ;
      /**
       * <code>double epTime = 2;</code>
       * @return The epTime.
       */
      @java.lang.Override
      public double getEpTime() {
        return epTime_;
      }
      /**
       * <code>double epTime = 2;</code>
       * @param value The epTime to set.
       * @return This builder for chaining.
       */
      public Builder setEpTime(double value) {
        
        epTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double epTime = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpTime() {
        
        epTime_ = 0D;
        onChanged();
        return this;
      }

      private double epDist_ ;
      /**
       * <code>double epDist = 3;</code>
       * @return The epDist.
       */
      @java.lang.Override
      public double getEpDist() {
        return epDist_;
      }
      /**
       * <code>double epDist = 3;</code>
       * @param value The epDist to set.
       * @return This builder for chaining.
       */
      public Builder setEpDist(double value) {
        
        epDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double epDist = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpDist() {
        
        epDist_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList interests_ = emptyDoubleList();
      private void ensureInterestsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          interests_ = mutableCopy(interests_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @return A list containing the interests.
       */
      public java.util.List<java.lang.Double>
          getInterestsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(interests_) : interests_;
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @return The count of interests.
       */
      public int getInterestsCount() {
        return interests_.size();
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The interests at the given index.
       */
      public double getInterests(int index) {
        return interests_.getDouble(index);
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The interests to set.
       * @return This builder for chaining.
       */
      public Builder setInterests(
          int index, double value) {
        ensureInterestsIsMutable();
        interests_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @param value The interests to add.
       * @return This builder for chaining.
       */
      public Builder addInterests(double value) {
        ensureInterestsIsMutable();
        interests_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @param values The interests to add.
       * @return This builder for chaining.
       */
      public Builder addAllInterests(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureInterestsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, interests_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double interests = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearInterests() {
        interests_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList costs_ = emptyDoubleList();
      private void ensureCostsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          costs_ = mutableCopy(costs_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @return A list containing the costs.
       */
      public java.util.List<java.lang.Double>
          getCostsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(costs_) : costs_;
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @return The count of costs.
       */
      public int getCostsCount() {
        return costs_.size();
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The costs at the given index.
       */
      public double getCosts(int index) {
        return costs_.getDouble(index);
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The costs to set.
       * @return This builder for chaining.
       */
      public Builder setCosts(
          int index, double value) {
        ensureCostsIsMutable();
        costs_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @param value The costs to add.
       * @return This builder for chaining.
       */
      public Builder addCosts(double value) {
        ensureCostsIsMutable();
        costs_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @param values The costs to add.
       * @return This builder for chaining.
       */
      public Builder addAllCosts(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureCostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, costs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double costs = 5 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearCosts() {
        costs_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList distances_ = emptyDoubleList();
      private void ensureDistancesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          distances_ = mutableCopy(distances_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @return A list containing the distances.
       */
      public java.util.List<java.lang.Double>
          getDistancesList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(distances_) : distances_;
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @return The count of distances.
       */
      public int getDistancesCount() {
        return distances_.size();
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The distances at the given index.
       */
      public double getDistances(int index) {
        return distances_.getDouble(index);
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The distances to set.
       * @return This builder for chaining.
       */
      public Builder setDistances(
          int index, double value) {
        ensureDistancesIsMutable();
        distances_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @param value The distances to add.
       * @return This builder for chaining.
       */
      public Builder addDistances(double value) {
        ensureDistancesIsMutable();
        distances_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @param values The distances to add.
       * @return This builder for chaining.
       */
      public Builder addAllDistances(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDistancesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, distances_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *compress matrix to single dimension array
       * </pre>
       *
       * <code>repeated double distances = 6 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearDistances() {
        distances_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Instance)
    }

    // @@protoc_insertion_point(class_scope:Instance)
    private static final InstanceOuterClass.Instance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InstanceOuterClass.Instance();
    }

    public static InstanceOuterClass.Instance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Instance>
        PARSER = new com.google.protobuf.AbstractParser<Instance>() {
      @java.lang.Override
      public Instance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Instance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Instance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public InstanceOuterClass.Instance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Instance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Instance_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016instance.proto\"y\n\010Instance\022\014\n\004size\030\001 \001" +
      "(\r\022\016\n\006epTime\030\002 \001(\001\022\016\n\006epDist\030\003 \001(\001\022\025\n\tin" +
      "terests\030\004 \003(\001B\002\020\001\022\021\n\005costs\030\005 \003(\001B\002\020\001\022\025\n\t" +
      "distances\030\006 \003(\001B\002\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Instance_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Instance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Instance_descriptor,
        new java.lang.String[] { "Size", "EpTime", "EpDist", "Interests", "Costs", "Distances", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
